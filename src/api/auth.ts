import apiRequest from ".";

interface Tariff {
  name: string;
  // –≤–æ–∑–º–æ–∂–Ω–æ –µ—Å—Ç—å –∏ –¥—Ä—É–≥–∏–µ –ø–æ–ª—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Å API
}
// –¢–∏–ø—ã –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export interface User {
  id: number;
  name: string;
  telegramUsername: string;
  avatarUrl: string;
  location: string;
  phone: string;
  isVerified: boolean;
  email?: string;
  lastName?: string;
  telegramId?: number;
  description?: string;
  tariff?: Tariff; // üí• –î–æ–±–∞–≤—å —ç—Ç–æ
}

// –≠–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
export const authTelegram = async (initData: string) => {
  return apiRequest<User>('/api/auth/auth/telegram/', 'POST', {
    body: { initData },
  });
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
// export const getProfile = async () => {
//   return apiRequest<User>('/api/auth/profile/', 'GET');
// };

// –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
export const getProfile = async () => {
  const accessToken = localStorage.getItem('access_token');
  if (!accessToken) {
    throw new Error('Access token not found in localStorage');
  }

  return apiRequest<User>('/api/auth/profile/', 'GET', {
    headers: {
      Authorization: `Bearer ${accessToken}`,
    },
  });
};

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
export const updateProfile = async (profileData: Partial<User>) => {
  return apiRequest<User>('/auth/profile/', 'PUT', {
    body: profileData,
  });
};

// –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª—è
export const deleteProfile = async () => {
  return apiRequest<null>('/auth/profile/', 'DELETE');
};

// –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–∞—Ä–∏—Ñ–æ–≤
export const getTariffs = async () => {
  const accessToken = localStorage.getItem('access_token');
  if (!accessToken) {
    throw new Error('Access token not found in localStorage');
  }

  return apiRequest<any>('/api/auth/tariffs/', 'GET', {
    headers: {
      Authorization: `Bearer ${accessToken}`,
    },
  });
};